package edu.ucsc.dbtune.optimizer;

import java.sql.SQLException;
import java.util.Set;

import edu.ucsc.dbtune.metadata.Index;
import edu.ucsc.dbtune.workload.SQLStatement;

/**
 * An object of this class is generated by an {@link Optimizer} and it represents a processed SQL 
 * statement which can be explained efficiently for different {@link Configuration} objects.
 *
 * @author Ivo Jimenez
 * @author Alkis Polyzotis
 *
 */
public interface PreparedSQLStatement
{
    /**
     * Get the {@link Optimizer} object associated with the statement.
     * 
     * @return the {@link Optimizer} object.
     */
    Optimizer getOptimizer();
    
    /**
     * Get the {@link SQLStatement} associated with this prepared statement.
     * @return The {@link SQLStatement} associated with this object.
     */
    SQLStatement getSQLStatement();
    
    /**
     * Compute a concrete explained plan from a prepared explained plan, for a given configuration.
     * 
     * @param conf
     *      the configuration.
     * @return
     *      a concrete explained plan that has the cost of the optimal plan under the configuration.
     * @throws SQLException
     *      if an error occurs while explaining the statement
     */
    ExplainedSQLStatement explain(Set<Index> conf) throws SQLException;
}
