<?xml version="1.0"?>
<project name="dbtune-tasks">

    <property file="build.properties"/>

    <path id="compile.classpath">
      <fileset dir="${lib.dir}" includes="*.jar" />
      <fileset dir="extensions/cli/lib/" includes="*.jar" />
      <fileset dir="extensions/ml/lib/" includes="*.jar" />
    </path>

    <target name="compile" description="Compile Java source.">
        <mkdir dir="${build.dir}/classes"/>
        <javac srcdir="${src.dir}" debug="on" destdir="${build.dir}/classes" includeantruntime="no">
            <classpath refid="compile.classpath"/>
        </javac>
    </target>

    <target name="compile.tests" depends="compile" description="Compile test source.">
        <mkdir dir="${build.dir}/tests"/>
        <javac srcdir="${test.dir}" debug="on" destdir="${build.dir}/tests" includeantruntime="no">
            <classpath path="${build.dir}/classes"/>
            <classpath refid="compile.classpath"/>
        </javac>
    </target>

    <target name="test.unit" depends="compile.tests" description="Execute tests.">
      <echo message="running unit tests"/>
      <mkdir dir="${build.dir}/${junit.out.dir}"/>
      <junit printsummary="yes" haltonerror="yes" haltonfailure="yes" fork="yes">
        <classpath>
          <path refid="compile.classpath"/>
          <pathelement location="${build.dir}/classes"/>
          <pathelement location="${build.dir}/tests"/>
        </classpath>
        <batchtest fork="yes" todir="${build.dir}/${junit.out.dir}">
            <fileset dir="${test.dir}">
                <include name="${unit}"/>
                <exclude name="**/AllTests.java"/>
            </fileset>
        </batchtest>
        <formatter type="xml" />
      </junit>
    </target>

	<target name="test.one" depends="compile.tests,argument-checking" description="Execute tests.">
      <echo message="running test ${class}"/>
      <mkdir dir="${build.dir}/${junit.out.dir}"/>
      <junit printsummary="no" haltonerror="yes" haltonfailure="yes" showoutput="no" fork="yes">
        <classpath>
          <path refid="compile.classpath"/>
          <pathelement location="${build.dir}/classes"/>
          <pathelement location="${build.dir}/tests"/>
        </classpath>
        <test todir="${build.dir}/${junit.out.dir}" name="${class}"/>
        <formatter usefile="false" type="plain"/>
      </junit>
    </target>

    <target name="test.functional" depends="compile.tests" description="Execute tests.">
        <echo message="running functional tests"/>
        <mkdir dir="${build.dir}/${junit.out.dir}"/>
        <junit printsummary="yes" haltonerror="no" haltonfailure="no" fork="yes">
            <classpath>
                <path refid="compile.classpath"/>
                <pathelement location="${build.dir}/classes"/>
                <pathelement location="${build.dir}/tests"/>
            </classpath>
            <batchtest fork="yes" todir="${build.dir}/${junit.out.dir}">
                <fileset dir="${test.dir}">
                    <include name="${functional}"/>
                    <exclude name="**/AllTests.java"/>
                </fileset>
            </batchtest>
            <formatter type="xml" />
        </junit>
        <junitreport todir="${build.dir}/${junit.out.dir}">
          <fileset dir="${build.dir}/${junit.out.dir}">
            <include name="TEST-*.xml" />
          </fileset>
          <report format="frames" todir="${build.dir}/${junit.out.dir}" />
        </junitreport>
    </target>

    <target name="clean"
            description="Remove generated files.">
        <delete dir="${build.dir}"/>
    </target>

    <target name="argument-checking" depends="compile.tests" >
        <fail message="No class variable defined" unless="class" />
        <available
            classname="${class}"
            classpath="${build.dir}/tests/"
            property="class.present" />

        <fail message="Class ${class} doesn't exist" unless="class.present" />
    </target>

</project>
